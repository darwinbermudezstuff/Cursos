//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Entity
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class EileenGaldamezEntities : DbContext
    {
        public EileenGaldamezEntities()
            : base("name=EileenGaldamezEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<tblAssignment> tblAssignment { get; set; }
        public virtual DbSet<tblCategory> tblCategory { get; set; }
        public virtual DbSet<tblCellar> tblCellar { get; set; }
        public virtual DbSet<tblCellarArea> tblCellarArea { get; set; }
        public virtual DbSet<tblConditionProduct> tblConditionProduct { get; set; }
        public virtual DbSet<tblContactInformation> tblContactInformation { get; set; }
        public virtual DbSet<tblDownloadAssignment> tblDownloadAssignment { get; set; }
        public virtual DbSet<tblEmployee> tblEmployee { get; set; }
        public virtual DbSet<tblFileManager> tblFileManager { get; set; }
        public virtual DbSet<tblLoanAssignment> tblLoanAssignment { get; set; }
        public virtual DbSet<tblLoanAssignmentFileManager> tblLoanAssignmentFileManager { get; set; }
        public virtual DbSet<tblProduct> tblProduct { get; set; }
        public virtual DbSet<tblProductFileManager> tblProductFileManager { get; set; }
        public virtual DbSet<tblProductType> tblProductType { get; set; }
        public virtual DbSet<tblProverContactInformation> tblProverContactInformation { get; set; }
        public virtual DbSet<tblProvider> tblProvider { get; set; }
        public virtual DbSet<tblTransaction> tblTransaction { get; set; }
        public virtual DbSet<tblTransactionConfigurate> tblTransactionConfigurate { get; set; }
        public virtual DbSet<tblTransactionType> tblTransactionType { get; set; }
        public virtual DbSet<tblTransactionTypeConditionDetail> tblTransactionTypeConditionDetail { get; set; }
        public virtual DbSet<tblTypePermission> tblTypePermission { get; set; }
        public virtual DbSet<tblUser> tblUser { get; set; }
        public virtual DbSet<tblUserConfiguration> tblUserConfiguration { get; set; }
        public virtual DbSet<tblUserType> tblUserType { get; set; }
    
        public virtual ObjectResult<tblProduct> SP_Product_SelectProduct(string iAction, Nullable<int> iCellarAreaID, Nullable<int> iCategoryID, Nullable<int> iFatherCateogryID)
        {
            var iActionParameter = iAction != null ?
                new ObjectParameter("iAction", iAction) :
                new ObjectParameter("iAction", typeof(string));
    
            var iCellarAreaIDParameter = iCellarAreaID.HasValue ?
                new ObjectParameter("iCellarAreaID", iCellarAreaID) :
                new ObjectParameter("iCellarAreaID", typeof(int));
    
            var iCategoryIDParameter = iCategoryID.HasValue ?
                new ObjectParameter("iCategoryID", iCategoryID) :
                new ObjectParameter("iCategoryID", typeof(int));
    
            var iFatherCateogryIDParameter = iFatherCateogryID.HasValue ?
                new ObjectParameter("iFatherCateogryID", iFatherCateogryID) :
                new ObjectParameter("iFatherCateogryID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tblProduct>("SP_Product_SelectProduct", iActionParameter, iCellarAreaIDParameter, iCategoryIDParameter, iFatherCateogryIDParameter);
        }
    
        public virtual ObjectResult<tblProduct> SP_Product_SelectProduct(string iAction, Nullable<int> iCellarAreaID, Nullable<int> iCategoryID, Nullable<int> iFatherCateogryID, MergeOption mergeOption)
        {
            var iActionParameter = iAction != null ?
                new ObjectParameter("iAction", iAction) :
                new ObjectParameter("iAction", typeof(string));
    
            var iCellarAreaIDParameter = iCellarAreaID.HasValue ?
                new ObjectParameter("iCellarAreaID", iCellarAreaID) :
                new ObjectParameter("iCellarAreaID", typeof(int));
    
            var iCategoryIDParameter = iCategoryID.HasValue ?
                new ObjectParameter("iCategoryID", iCategoryID) :
                new ObjectParameter("iCategoryID", typeof(int));
    
            var iFatherCateogryIDParameter = iFatherCateogryID.HasValue ?
                new ObjectParameter("iFatherCateogryID", iFatherCateogryID) :
                new ObjectParameter("iFatherCateogryID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tblProduct>("SP_Product_SelectProduct", mergeOption, iActionParameter, iCellarAreaIDParameter, iCategoryIDParameter, iFatherCateogryIDParameter);
        }
    }
}
