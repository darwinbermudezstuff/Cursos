@model Storage.Models.Download.DownloadAssignmentViewModels


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-horizontal">
        @*<hr />
        <h1>Create Assignment</h1>
        <hr />*@
        <div class="form-horizontal">


            <div class="form-group">
                <div class="col-md-6">
                    <div class="form-group">
                        <div class="col-md-10">
                            <h4>Product Assignment Information</h4>
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(m => m.Product, new { @class = "control-label col-md-4" })
                        <div class="col-md-6">
                            @Html.DropDownListFor(m => m.Download.idProduct, new SelectList(Model.ProductList, "id", "name", 0), "Please Select Category", new { @class = "form-control ProductSelected" })
                            @Html.ValidationMessageFor(model => model.Download.idProduct, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(m => m.Employees, new { @class = "control-label col-md-4" })
                        <div class="col-md-6">
                            @Html.DropDownListFor(m => m.Download.idEmployee, new SelectList(Model.EmployeesList, "id", "firstName", "lastName", 0), "Please Select Category", new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Download.idEmployee, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Download.detail, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-6">
                            @Html.EditorFor(model => model.Download.detail, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Download.detail, "", new { @class = "text-danger" })
                        </div>
                    </div>

                </div>

                <div class="col-md-6">
                    <div class="form-group">
                        <div class="col-md-10">
                            <h4>Assignment Infomation</h4>
                        </div>
                    </div>


                    <div class="form-group">
                        @Html.LabelFor(model => model.Transaction.idConditionProduct, new { @class = "control-label col-md-4" })
                        <div class="col-md-6">
                            @Html.DropDownListFor(m => m.Transaction.idConditionProduct, new SelectList(Model.ConditionProductList, "id", "name", 0), "Please Select Category", new { @class = "form-control ConditionSelect" })
                            @Html.ValidationMessageFor(model => model.Transaction.idConditionProduct, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Transaction.amount, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-6">
                            @Html.EditorFor(model => model.Transaction.amount, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Transaction.amount, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group ActualAmountValueAlert" style="display:none;">
                        @Html.Label("actualAmount", "Actual Amount Condition", htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-6">
                            <div class="alert alert-info" role="alert"><label class="ActualAmountConditionValue" /></div>
                        </div>
                    </div>
                    <div class="form-group ActualAmountValueAlert" style="display:none;">
                        @Html.Label("actualAmount", "Current Amount", htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-6">
                            <div class="alert alert-info" role="alert"><label class="ActualAmountTotalValue" /></div>
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Transaction.detail, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-6">
                            @Html.EditorFor(model => model.Transaction.detail, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Transaction.detail, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Transaction.createDate, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-6">
                            @Html.EditorFor(model => model.Transaction.createDate, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Transaction.createDate, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-10">
                @Html.HiddenFor(model => model.Download.id)
                @Html.HiddenFor(model => model.CategoryID)
                @Html.HiddenFor(model => model.FatherCateogryID)
                @Html.HiddenFor(model => model.CellarArea)
                @Html.HiddenFor(model => model.Download.idCategory)
                @Html.HiddenFor(model => model.Download.createDate)
                @Html.HiddenFor(model => model.Download.state)
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>

    <script type="text/javascript">
                        $(document).ready(function () {
                            var ProductID = "";
                            var ConditionID = "";

                            $(".ProductSelected").change(function () {
                                ProductID = "";
                                ConditionID = "";
                                $(".ProductSelected option:selected").each(function () { ProductID += $(this)[0].value; });
                                $(".ConditionSelect option:selected").each(function () { ConditionID += $(this)[0].value; });
                                amountProduct(ProductID, ConditionID);
                            });


                            $(".ConditionSelect").change(function () {
                                ProductID = "";
                                ConditionID = "";
                                $(".ProductSelected option:selected").each(function () { ProductID += $(this)[0].value; });
                                $(".ConditionSelect option:selected").each(function () { ConditionID += $(this)[0].value; });
                                console.log("Producto: " + ProductID + " \n Condicion: " + ConditionID);
                                amountProduct(ProductID, ConditionID);
                            });

                        });

                        function amountProduct(ProductID, conditionID) {
                            if (ProductID.length > 0 && conditionID.length > 0) {
                                var actionLink = '@Url.Action("ActualAmountByDownload", "Download")';
                                var CategoryID = '@Model.CategoryID';
                                var url = actionLink + "?ProductID=" + ProductID + "&CategoryID=" + CategoryID + "&condition=" + conditionID + "&transactionType=" + 2;
                                console.log(url);
                                $.ajax({
                                    type: 'GET',
                                    url: url,
                                    async: false,
                                    beforeSend: function (xhr) {
                                        if (xhr && xhr.overrideMimeType) {
                                            xhr.overrideMimeType('application/json;charset=utf-8');
                                        }
                                    },
                                    dataType: 'json',
                                    success: function (data) {
                                        $(".ActualAmountValueAlert").show();
                                        $(".ActualAmountConditionValue").html(data.AmountCondition);
                                        $(".ActualAmountTotalValue").html(data.AmountTotal);
                                    }
                                });
                            }
                        };
    </script>
}
