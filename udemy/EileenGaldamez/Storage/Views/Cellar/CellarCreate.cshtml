@model Storage.Models.Cellar.CellarViewModels

<h1>@ViewBag.Title</h1>
<h3>@ViewBag.Message</h3>
<hr />
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-horizontal">
            <div class="form-group">
                <div class="col-md-6">
                    <div class="form-group">
                        <div class="col-md-10">
                            <h4>Product Assignment Information</h4>
                        </div>
                    </div>
                    <div class="form-group">                         @Html.LabelFor(m => m.Product, new { @class = "control-label col-md-4" })
                        <div class="col-md-6">
                            <label id="selectProduct">
                                @Html.DropDownListFor(
                                    m => m.Cellar.idProduct,
                                    new SelectList(Model.ProductList, "id", "name", 0),
                                    "Please Select Category",
                                    new { @class = "form-control selectProduct selectFind", @style = "width: 100% !important;" }

                                    )
                            </label>
                            @Html.ValidationMessageFor(model => model.Cellar.idProduct, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Cellar.Min, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-6">
                            @Html.EditorFor(model => model.Cellar.Min, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Cellar.Min, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.Cellar.Max, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-6">
                            @Html.EditorFor(model => model.Cellar.Max, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Cellar.Max, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    @if (!String.IsNullOrEmpty(Model.GetCellarToArea.ToString()))
                    {
                        <div class="form-group">
                            @Html.LabelFor(m => m.Cellar.idcellarArea, new { @class = "control-label col-md-4" })
                            <div class="col-md-6">
                                @Html.DropDownListFor(m => m.Cellar.idcellarArea, new SelectList(Model.CellarAreaList, "id", "name", (int)Model.GetCellarToArea), "Please Select Category", new { @class = "form-control Department", @style = "width: 100% !important;"})
                                @Html.ValidationMessageFor(model => model.Cellar.idcellarArea, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    }
                    else
                    {
                        @Html.HiddenFor(model => model.GetCellarToArea)
                    }

                    <div class="form-group">
                        @Html.LabelFor(model => model.Cellar.detail, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-6">
                            @Html.EditorFor(model => model.Cellar.detail, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Cellar.detail, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="col-md-6">

                    <div class="form-group">
                        <div class="col-md-10">
                            <h4>Department Information</h4>
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.Transaction.amount, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-6">
                            @Html.EditorFor(model => model.Transaction.amount, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Transaction.amount, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.Transaction.detail, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-6">
                            @Html.EditorFor(model => model.Transaction.detail, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Transaction.detail, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(m => m.Provider, new { @class = "control-label col-md-4" })
                        <div class="col-md-6">
                            @Html.DropDownListFor(m => m.Transaction.idProvide, new SelectList(Model.ProviderList, "id", "companyName", 0), "Please Select Category", new { @class = "form-control", @style = "width: 100% !important;" })
                            @Html.ValidationMessageFor(model => model.Transaction.idProvide, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Transaction.idConditionProduct, new { @class = "control-label col-md-4" })
                        <div class="col-md-6">
                            @Html.DropDownListFor(m => m.Transaction.idConditionProduct, new SelectList(Model.ConditionProductList, "id", "name", 0), "Please Select Category", new { @class = "form-control", @style = "width: 100% !important;" })
                            @Html.ValidationMessageFor(model => model.Transaction.idConditionProduct, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Transaction.expeditionDate, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-6">
                            @Html.EditorFor(model => model.Transaction.expeditionDate, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Transaction.expeditionDate)
                        </div>
                    </div>


                    <div class="form-group">
                        @Html.LabelFor(model => model.Transaction.createDate, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-6">
                            @Html.EditorFor(model => model.Transaction.createDate, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Transaction.createDate, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                </div>
                    </div>
                    <div class="form-group">
                        <div class="col-md-6">
                            @Html.HiddenFor(model => model.Cellar.id)
                            @Html.HiddenFor(model => model.Cellar.upDateDate)
                            @Html.HiddenFor(model => model.Cellar.createDate)
                            @Html.HiddenFor(model => model.Cellar.state)
                            <input type="submit" value="Create" class="btn btn-default" />
                        </div>
                    </div>
                </div>




                <script type="text/javascript">
                        $(document).ready(function () {
                            $(".Department").change(function () {
                                var DepartmentID = "";
                                $(".Department option:selected").each(function () { DepartmentID += $(this)[0].value; });
                                if (DepartmentID != "") {
                                    var actionLink = '@Url.Action("ProductByDeparment", "Cellar")';
                                    var cellarArea = '@Model.CellarArea';
                                    var url = actionLink + "?CellarArea=" + DepartmentID;
                                    $.ajax({
                                        url: url,
                                        dataType: 'json',
                                        success: function (json) {

                                            $('.selectProduct').html('<option value="">Please Select Category</option>');
                                            $.each(json.Product, function (i, value) {
                                                console.log("valor i: " + value.id + " valor value: " + value.name);
                                                $('.selectProduct').append($('<option>').text(value.name).attr('value', value.id));
                                            });

                                        }
                                    });
                                }
                            });
                        });
                </script>


}

