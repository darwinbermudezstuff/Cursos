//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Data
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class BIBLIOTECAEntities1 : DbContext
    {
        public BIBLIOTECAEntities1()
            : base("name=BIBLIOTECAEntities1")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<AREA> AREA { get; set; }
        public virtual DbSet<AUTOR> AUTOR { get; set; }
        public virtual DbSet<EDITORIAL> EDITORIAL { get; set; }
        public virtual DbSet<ESTUDIANTE> ESTUDIANTE { get; set; }
        public virtual DbSet<LIBRO> LIBRO { get; set; }
        public virtual DbSet<PRESTAMO> PRESTAMO { get; set; }
    
        public virtual ObjectResult<CREATEESTUDIANTE_Result> CREATEESTUDIANTE(string ci, string nombre, string apellido, string direccion, string carrera, Nullable<int> edad)
        {
            var ciParameter = ci != null ?
                new ObjectParameter("ci", ci) :
                new ObjectParameter("ci", typeof(string));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("nombre", nombre) :
                new ObjectParameter("nombre", typeof(string));
    
            var apellidoParameter = apellido != null ?
                new ObjectParameter("apellido", apellido) :
                new ObjectParameter("apellido", typeof(string));
    
            var direccionParameter = direccion != null ?
                new ObjectParameter("direccion", direccion) :
                new ObjectParameter("direccion", typeof(string));
    
            var carreraParameter = carrera != null ?
                new ObjectParameter("carrera", carrera) :
                new ObjectParameter("carrera", typeof(string));
    
            var edadParameter = edad.HasValue ?
                new ObjectParameter("edad", edad) :
                new ObjectParameter("edad", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CREATEESTUDIANTE_Result>("CREATEESTUDIANTE", ciParameter, nombreParameter, apellidoParameter, direccionParameter, carreraParameter, edadParameter);
        }
    
        public virtual ObjectResult<EDITBOOK_Result> EDITBOOK(Nullable<int> idLibro, string titulo, Nullable<int> idEditorial, Nullable<int> idArea)
        {
            var idLibroParameter = idLibro.HasValue ?
                new ObjectParameter("idLibro", idLibro) :
                new ObjectParameter("idLibro", typeof(int));
    
            var tituloParameter = titulo != null ?
                new ObjectParameter("titulo", titulo) :
                new ObjectParameter("titulo", typeof(string));
    
            var idEditorialParameter = idEditorial.HasValue ?
                new ObjectParameter("idEditorial", idEditorial) :
                new ObjectParameter("idEditorial", typeof(int));
    
            var idAreaParameter = idArea.HasValue ?
                new ObjectParameter("idArea", idArea) :
                new ObjectParameter("idArea", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<EDITBOOK_Result>("EDITBOOK", idLibroParameter, tituloParameter, idEditorialParameter, idAreaParameter);
        }
    
        public virtual ObjectResult<string> VIEWBOOK(string autor)
        {
            var autorParameter = autor != null ?
                new ObjectParameter("autor", autor) :
                new ObjectParameter("autor", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("VIEWBOOK", autorParameter);
        }
    }
}
